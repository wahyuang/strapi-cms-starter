version: "3"

services:
  strapi:
    container_name: "strapi-cms"
    build:
      context: ./app
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      PUBLIC_URL: ${PUBLIC_URL}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      TRANSFER_TOKEN_SALT: ${TRANSFER_TOKEN_SALT}
      NODE_ENV: ${NODE_ENV}
      DATABASE_CLIENT: "postgres"
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM}
      REPLY_TO: ${REPLY_TO}
    volumes:
      - ./app/config/:/opt/app/config
      - ./app/src/:/opt/app/src
      - ./app/package.json:/opt/package.json
      - ./app/yarn.lock:/opt/yarn.lock
      - ./app/public/uploads/:/opt/app/public/uploads
    ports:
      - 1337:1337
    networks:
      - strapi
    depends_on:
      - db

  db:
    image: postgres
    container_name: "strapi-db"
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - 5555:5432
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - strapi

volumes:
  strapi-db:

networks:
  strapi:
    name: strapi-network
    driver: bridge
